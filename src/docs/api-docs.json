{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.1",
    "title" : "Lobster",
    "description" : "Go to /login/ to obtain your token. Authorize with the following value: 'Token {your_token}'"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "ApiKeyAuth" : [ ]
  } ],
  "components" : {
    "securitySchemes" : {
      "ApiKeyAuth" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "Authorization"
      }
    },
    "schemas" : {
      "User" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "email" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "is_super" : {
            "type" : "boolean"
          }
        }
      },
      "Course" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "short_name" : {
            "type" : "string"
          },
          "full_name" : {
            "type" : "string"
          },
          "term" : {
            "type" : "string",
            "enum" : [ "fall", "winter", "spring", "summer" ]
          },
          "year" : {
            "type" : "integer"
          }
        }
      },
      "Project" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "exercise_id" : {
            "type" : "integer"
          },
          "last_modified" : {
            "type" : "string",
            "readOnly" : true
          },
          "contents" : {
            "type" : "object"
          }
        }
      },
      "Exercise" : {
        "properties" : {
          "id" : {
            "type" : "integer",
            "readOnly" : true
          },
          "name" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 100
          },
          "starter_project_id" : {
            "type" : "integer"
          }
        }
      }
    }
  },
  "paths" : {
    "/public/projects/{project_id}/" : {
      "get" : {
        "tags" : [ "Public" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "project_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on a project on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          }
        }
      }
    },
    "/public/courses/" : {
      "get" : {
        "tags" : [ "Public" ],
        "summary" : "Gets a list of courses on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/courses/{course_id}/" : {
      "get" : {
        "tags" : [ "Public" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details of a course",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          }
        }
      }
    },
    "/public/courses/{short_name}/{term}/{year}" : {
      "get" : {
        "tags" : [ "Public" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "short_name",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        }, {
          "in" : "path",
          "name" : "term",
          "schema" : {
            "type" : "string",
            "enum" : [ "fall", "winter", "spring", "summer" ]
          },
          "required" : true
        }, {
          "in" : "path",
          "name" : "year",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details of a course",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          },
          "404" : {
            "description" : "NOT FOUND"
          }
        }
      }
    },
    "/api/courses/" : {
      "get" : {
        "tags" : [ "Courses" ],
        "summary" : "Gets a list of courses on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Courses" ],
        "summary" : "Adds a course to lobster",
        "requestBody" : {
          "description" : "Course Post Object",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Course"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{short_name}/{term}/{year}/" : {
      "get" : {
        "tags" : [ "Courses" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "short_name",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        }, {
          "in" : "path",
          "name" : "term",
          "schema" : {
            "type" : "string",
            "enum" : [ "fall", "winter", "spring", "summer" ]
          },
          "required" : true
        }, {
          "in" : "path",
          "name" : "year",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on a course on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{course_id}/" : {
      "get" : {
        "tags" : [ "Courses" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on a course on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Courses" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "requestBody" : {
          "description" : "Course Post Object",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Course"
              }
            }
          }
        },
        "summary" : "Edits a course on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Courses" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Deletes a course on lobster",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/courses/{course_id}/copy/" : {
      "post" : {
        "tags" : [ "Courses" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Copies an existing course on lobster. Copies exercises and course admins but does not copy other users",
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Course"
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/" : {
      "post" : {
        "tags" : [ "Exercises" ],
        "summary" : "Adds a course to lobster",
        "requestBody" : {
          "description" : "Exercise Post Object",
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file " : {
                    "type" : "object",
                    "properties" : {
                      "filename" : {
                        "type" : "string"
                      },
                      "contents" : {
                        "type" : "string"
                      }
                    }
                  },
                  "course_id" : {
                    "type" : "integer"
                  },
                  "name" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Exercise"
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{course_id}/exercises/" : {
      "get" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets exercises associated with a course on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "exercises" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Exercise"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/exercises/{exercise_id}/" : {
      "get" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on an exercise on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Exercise"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on an exercise on lobster",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/exercises/{exercise_id}/starter_project/" : {
      "get" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets the starter project for an exercise",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/" : {
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Creates a new project",
        "requestBody" : {
          "description" : "Project data",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/{project_id}/" : {
      "get" : {
        "tags" : [ "Projects" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "project_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets details on a project on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Projects" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "project_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Deletes a project on lobster",
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      },
      "patch" : {
        "tags" : [ "Projects" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "project_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Modifies a project on lobster",
        "requestBody" : {
          "description" : "Project data",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        }
      }
    },
    "/api/exercises/{exercise_id}/starter_files/" : {
      "get" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets starter_files for an exercise on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "requestBody" : {
          "description" : "Course Post Object",
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "summary" : "Removes a starter_file for an exercise on lobster",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Exercises" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "exercise_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Adds starter_files for an exercise on lobster",
        "requestBody" : {
          "description" : "Exercise Post Object",
          "required" : true,
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "filename" : {
                    "type" : "string"
                  },
                  "file_contents" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "files" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{course_id}/admins/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets list of admins for a course",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Add admins to a course",
        "requestBody" : {
          "description" : "List of admins emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Remove admins from a course",
        "requestBody" : {
          "description" : "List of admins emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{course_id}/staff/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets list of staff for a course",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Add staff to a course",
        "requestBody" : {
          "description" : "List of staff emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Remove staff from a course",
        "requestBody" : {
          "description" : "List of staff emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/courses/{course_id}/students/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Gets list of students for a course",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Add students to a course",
        "requestBody" : {
          "description" : "List of student emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "course_id",
          "schema" : {
            "type" : "integer"
          },
          "required" : true
        } ],
        "summary" : "Remove students from a course",
        "requestBody" : {
          "description" : "List of student emails",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "users" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "users" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userid}/courses_is_admin_for/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userid",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "summary" : "Gets list of courses the user is an admin for",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userid}/courses_is_staff_for/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userid",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "summary" : "Gets list of courses the user is an admin for",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userid}/courses_is_student_for/" : {
      "get" : {
        "tags" : [ "Permissions" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userid",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "summary" : "Gets list of courses the user is an admin for",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "courses" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#/components/schemas/Course"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{userid}/" : {
      "get" : {
        "tags" : [ "Users" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userid",
          "schema" : {
            "type" : "string"
          },
          "required" : true
        } ],
        "summary" : "Gets information on a specific user",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/whoami/" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Gets information on the logged in user",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    }
  }
}